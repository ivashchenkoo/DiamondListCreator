<Window x:Class="DiamondListCreator.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:i="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:c="clr-namespace:DiamondListCreator.Controls"
        xmlns:converters="clr-namespace:DiamondListCreator.Converters"
        xmlns:vm="clr-namespace:DiamondListCreator.ViewModels"
        mc:Ignorable="d"
        Title="DLC"
        Width="900"
        Height="555"
        ResizeMode="CanMinimize"
        WindowStartupLocation="CenterScreen"
        Background="{StaticResource LightBaseColorBrush}">

    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <converters:PathExistsToColorBrushConverter x:Key="PathExistsToBrushConverter"></converters:PathExistsToColorBrushConverter>
    </Window.Resources>

    <Grid Margin="20">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2.3*"/>
            <ColumnDefinition Width="5*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBox Style="{StaticResource ListTextBoxStyle}"
                 Text="{Binding ListText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 Grid.Row="0"
                 Grid.Column="0"
                 Margin="0,0,0,15"/>

        <Button Style="{StaticResource ButtonBase}"
                Grid.Row="1"
                Grid.Column="0"
                Command="{Binding Start}">
            СТАРТ
        </Button>

        <Grid Grid.Row="0"
              Grid.Column="1"
              Margin="15,0,0,15">

            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" DataContext="{Binding Paths, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBox x:Name="DiamondsFolderPathTextBox"
                         Text="{Binding DiamondsFolderPath}"
                         Grid.Row="0"
                         Grid.Column="0"
                         ToolTip="Шлях до папки з алмазками"
                         BorderThickness="3"
                         Margin="0,0,7,7"
                         Style="{DynamicResource PathTextBoxStyle}">
                    <TextBox.BorderBrush>
                        <MultiBinding Converter="{StaticResource PathExistsToBrushConverter}">
                            <Binding ElementName="DiamondsFolderPathTextBox" Path="Text"></Binding>
                            <Binding ElementName="DiamondsFolderPathTextBox" Path="IsKeyboardFocused"></Binding>
                        </MultiBinding>
                    </TextBox.BorderBrush>
                </TextBox>

                <Button x:Name="ChooseDiamondsFolderPathButton"
                        Grid.Row="0"
                        Grid.Column="1"
                        ToolTip="Обрати шлях до папки з алмазками"
                        Margin="0,0,0,7"
                        Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.ChooseDiamondsFolder}"
                        Content="{StaticResource FolderIcon}"
                        Style="{StaticResource ButtonPathStyle}"/>

                <TextBox x:Name="FilesSavePathTextBox"
                         Text="{Binding FilesSavePath}"
                         Grid.Row="1"
                         Grid.Column="0"
                         ToolTip="Шлях до збереження списку"
                         BorderThickness="3"
                         Margin="0,0,7,7"
                         Style="{DynamicResource PathTextBoxStyle}">
                    <TextBox.BorderBrush>
                        <MultiBinding Converter="{StaticResource PathExistsToBrushConverter}">
                            <Binding ElementName="FilesSavePathTextBox" Path="Text"></Binding>
                            <Binding ElementName="FilesSavePathTextBox" Path="IsKeyboardFocused"></Binding>
                        </MultiBinding>
                    </TextBox.BorderBrush>
                </TextBox>

                <Button x:Name="ChooseFilesSavePathButton"
                        Grid.Row="1"
                        Grid.Column="1"
                        ToolTip="Обрати шлях до збереження списку"
                        Margin="0,0,0,7"
                        Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.ChooseFilesSaveFolder}"
                        Content="{StaticResource FolderIcon}"
                        Style="{StaticResource ButtonPathStyle}"/>

                <TextBox x:Name="AccountingExcelFilePathTextBox"
                         Text="{Binding AccountingExcelFilePath}"
                         Grid.Row="2"
                         Grid.Column="0"
                         ToolTip="Шлях до загального обліку"
                         BorderThickness="3"
                         Margin="0,0,7,7"
                         Style="{DynamicResource PathTextBoxStyle}">
                    <TextBox.BorderBrush>
                        <MultiBinding Converter="{StaticResource PathExistsToBrushConverter}">
                            <Binding ElementName="AccountingExcelFilePathTextBox" Path="Text"></Binding>
                            <Binding ElementName="AccountingExcelFilePathTextBox" Path="IsKeyboardFocused"></Binding>
                        </MultiBinding>
                    </TextBox.BorderBrush>
                </TextBox>

                <Button x:Name="ChooseAccountingExcelFilePathButton"
                        Grid.Row="2"
                        Grid.Column="1"
                        ToolTip="Обрати шлях до загального обліку"
                        Margin="0,0,0,7"
                        Content="{StaticResource FileIcon}"
                        Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.ChooseAccountingFile}"
                        Style="{StaticResource ButtonPathStyle}"/>

                <TextBox x:Name="SavedLegendsPathTextBox"
                         Text="{Binding SavedLegendsPath}"
                         Grid.Row="3"
                         Grid.Column="0"
                         ToolTip="Шлях до створених легенд"
                         BorderThickness="3"
                         Margin="0,0,7,7"
                         Style="{DynamicResource PathTextBoxStyle}">
                    <TextBox.BorderBrush>
                        <MultiBinding Converter="{StaticResource PathExistsToBrushConverter}">
                            <Binding ElementName="SavedLegendsPathTextBox" Path="Text"></Binding>
                            <Binding ElementName="SavedLegendsPathTextBox" Path="IsKeyboardFocused"></Binding>
                        </MultiBinding>
                    </TextBox.BorderBrush>
                </TextBox>

                <Button x:Name="ChooseSavedLegendsPathButton"
                        Grid.Row="3"
                        Grid.Column="1"
                        ToolTip="Обрати шлях до створених легенд"
                        Margin="0,0,0,7"
                        Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.ChooseSavedLegendsFolder}"
                        Content="{StaticResource FolderIcon}"
                        Style="{StaticResource ButtonPathStyle}"/>

                <TextBox x:Name="SavedCanvasesPathTextBox"
                         Text="{Binding SavedCanvasesPath}"
                         Grid.Row="4"
                         Grid.Column="0"
                         ToolTip="Шлях до створених холстів"
                         BorderThickness="3"
                         Margin="0,0,7,7"
                         Style="{DynamicResource PathTextBoxStyle}">
                    <TextBox.BorderBrush>
                        <MultiBinding Converter="{StaticResource PathExistsToBrushConverter}">
                            <Binding ElementName="SavedCanvasesPathTextBox" Path="Text"></Binding>
                            <Binding ElementName="SavedCanvasesPathTextBox" Path="IsKeyboardFocused"></Binding>
                        </MultiBinding>
                    </TextBox.BorderBrush>
                </TextBox>

                <Button x:Name="ChooseSavedCanvasesPathButton"
                        Grid.Row="4"
                        Grid.Column="1"
                        ToolTip="Обрати шлях до створених холстів"
                        Margin="0,0,0,7"
                        Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.ChooseSavedCanvasesFolder}"
                        Content="{StaticResource FolderIcon}"
                        Style="{StaticResource ButtonPathStyle}"/>

                <TextBox x:Name="CanvasesSavePathTextBox"
                         Text="{Binding CanvasesSavePath}"
                         Grid.Row="5"
                         Grid.Column="0"
                         ToolTip="Шлях до збереження холстів"
                         BorderThickness="3"
                         Margin="0,0,7,7"
                         Style="{DynamicResource PathTextBoxStyle}">
                    <TextBox.BorderBrush>
                        <MultiBinding Converter="{StaticResource PathExistsToBrushConverter}">
                            <Binding ElementName="CanvasesSavePathTextBox" Path="Text"></Binding>
                            <Binding ElementName="CanvasesSavePathTextBox" Path="IsKeyboardFocused"></Binding>
                        </MultiBinding>
                    </TextBox.BorderBrush>
                </TextBox>

                <Button x:Name="ChooseCanvasesSavePathButton"
                        Grid.Row="5"
                        Grid.Column="1"
                        ToolTip="Обрати шлях до збереження холстів"
                        Margin="0,0,0,7"
                        Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.ChooseCanvasesSaveFolder}"
                        Content="{StaticResource FolderIcon}"
                        Style="{StaticResource ButtonPathStyle}"/>

            </Grid>

            <Border Grid.Row="1"
                    BorderThickness="3"
                    Margin="0,0,0,0"
                    Background="Black"
                    VerticalAlignment="Top"
                    BorderBrush="{StaticResource DarkAdditionalColorBrush}">

                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0"
                               Foreground="White"
                               Style="{StaticResource TextBlockBase}"
                               Text="Налаштування холстів"
                               Margin="0,0,0,5"/>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0"
                                Margin="0,0,10,0"
                                Style="{StaticResource ButtonSettingsStyle}"
                                Command="{Binding EditTxtFile}"
                                CommandParameter="canvases.json"
                                Content="Стандартні"/>

                        <Button Grid.Column="1"
                                Style="{StaticResource ButtonSettingsStyle}"
                                Command="{Binding EditTxtFile}"
                                CommandParameter="stretched_canvases.json"
                                Content="Підрамники"/>

                    </Grid>
                </Grid>
            </Border>

        </Grid>

        <Viewbox Margin="15,0,0,0"
                 Grid.Row="1"
                 Grid.Column="1"
                 HorizontalAlignment="Left" VerticalAlignment="Bottom">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <CheckBox Style="{StaticResource CheckBoxBase}"
                          x:Name="ListCheckBox"
                          IsChecked="{Binding IsListChecked}"
                          Grid.Row="0"
                          Grid.Column="0"
                          Margin="0,0,5,0">
                    СПИСОК
                </CheckBox>

                <CheckBox x:Name="AccountingCheckBox"
                          IsChecked="{Binding IsAccountingChecked}"
                          Grid.Row="0"
                          Grid.Column="1"
                          Margin="0,0,5,0">
                    ОБЛІК

                    <CheckBox.Style>
                        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource CheckBoxBase}">
                            <Style.Triggers>

                                <DataTrigger Binding="{Binding ElementName=ListCheckBox, Path=IsChecked}" Value="False">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ElementName=ListCheckBox, Path=IsChecked}" Value="True">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>

                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>

                </CheckBox>

                <CheckBox x:Name="ListStickersCheckBox"
                              IsChecked="{Binding IsListStickersChecked}"
                              Grid.Row="0"
                              Grid.Column="2"
                              Margin="0,0,5,0">
                    НАКЛЕЙКИ

                    <CheckBox.Style>
                        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource CheckBoxBase}">
                            <Style.Triggers>

                                <DataTrigger Binding="{Binding ElementName=ListCheckBox, Path=IsChecked}" Value="False">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ElementName=ListCheckBox, Path=IsChecked}" Value="True">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>

                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>

                </CheckBox>

                <CheckBox x:Name="SaveAsWordCheckBox"
                          IsChecked="{Binding SaveAsWordChecked}"
                          Grid.Row="0"
                          Grid.Column="3"
                          Margin="0,0,5,0"
                          ToolTip="Створити список у docx (за замовчуванням xlsx)">
                    DOCX

                    <CheckBox.Style>
                        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource CheckBoxBase}">
                            <Style.Triggers>

                                <DataTrigger Binding="{Binding ElementName=ListCheckBox, Path=IsChecked}" Value="False">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ElementName=ListCheckBox, Path=IsChecked}" Value="True">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>

                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>

                </CheckBox>

                <CheckBox Style="{StaticResource CheckBoxBase}"
                          IsChecked="{Binding IsLegendsChecked}"
                          x:Name="LegendsCheckBox"
                          Grid.Row="2"
                          Grid.Column="0"
                          Margin="0,0,5,0">
                    ЛЕГЕНДИ
                </CheckBox>

                <CheckBox Style="{StaticResource CheckBoxBase}"
                          IsChecked="{Binding IsStickersChecked}"
                          x:Name="StickersCheckBox"
                          Grid.Row="2"
                          Grid.Column="1"
                          Margin="0,0,5,0">
                    СТІКЕРИ
                </CheckBox>

                <CheckBox Style="{StaticResource CheckBoxBase}"
                          IsChecked="{Binding IsCanvasesChecked}"
                          x:Name="CanvasesCheckBox"
                          Grid.Row="2"
                          Grid.Column="2">
                    ХОЛСТИ
                </CheckBox>

                <c:SmoothProgressBar Grid.Row="1"
                                     Grid.Column="0"
                                     Value="{Binding ListProgressValue}"                             
                                     Margin="21,0,15,5">
                    <i:Interaction.Behaviors>
                        <c:SmoothProgressBarBehavior />
                    </i:Interaction.Behaviors>
                </c:SmoothProgressBar>

                <c:SmoothProgressBar x:Name="ListStickersProgressBar"
                                     Grid.Row="1"
                                     Grid.Column="1"
                                     IsIndeterminate="{Binding ListStickersProgressStatus}"
                                     Margin="21,0,5,5"/>

                <c:SmoothProgressBar Grid.Row="1"
                                     Grid.Column="2"
                                     IsIndeterminate="{Binding ListStickersProgressStatus}"
                                     Margin="21,0,5,5"/>

                <c:SmoothProgressBar Grid.Row="3"
                                     Grid.Column="0"
                                     Value="{Binding LegendsProgressValue}"
                                     Margin="21,0,5,0">
                    <i:Interaction.Behaviors>
                        <c:SmoothProgressBarBehavior />
                    </i:Interaction.Behaviors>
                </c:SmoothProgressBar>

                <c:SmoothProgressBar Grid.Row="3"
                                     Grid.Column="1"
                                     Value="{Binding StickersProgressValue}"
                                     Margin="21,0,5,0"
                                     AnimationDuration="0.5">
                    <i:Interaction.Behaviors>
                        <c:SmoothProgressBarBehavior />
                    </i:Interaction.Behaviors>
                </c:SmoothProgressBar>

                <c:SmoothProgressBar Grid.Row="3"
                                     Grid.Column="2"
                                     Value="{Binding CanvasesProgressValue}"
                                     Margin="21,0,26,0">
                    <i:Interaction.Behaviors>
                        <c:SmoothProgressBarBehavior />
                    </i:Interaction.Behaviors>
                </c:SmoothProgressBar>
            </Grid>
        </Viewbox>
    </Grid>
</Window>
